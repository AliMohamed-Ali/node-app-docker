version: '3'
services:
  node-app:
    # container_name: node-express-container
    image: ali3lsayed/node-app-docker
    # ports:
    #   - "4000:4000"
    deploy:
      replicas: 4
      # placement:
      #   max_replicas_per_node: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
    env_file:
      - ./.env
    depends_on:
      - mongo
      - redis
  # postgres:
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: example
  #     POSTGRES_USER: root
  #   volumes:
  #     - postgres_db:/var/lib/postgresql/data
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo_db:/data/db 
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #   depends_on:
  #     - mongo
  redis:
    image: redis
  nginx:
    image: nginx:stable-alpine
    ports:
    - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app
volumes:
  mongo_db: 
  # postgres_db: